# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Validate Python

on:
  pull_request:
    branches:
      - master

jobs:
  python-validation:
    runs-on: ubuntu-latest
    env:
      ENV: test
    steps:
    - uses: actions/checkout@v2
    - uses: google-github-actions/setup-gcloud@v0.2.1
      with:
        project_id: ${{ secrets.DEV_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_TEST_KEY }}
        export_default_credentials: true
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9.6
    - name: Install Poetry
      uses: snok/install-poetry@v1.1.8
      with:
        version: 1.1.9
    - name: Cache dependencies
      uses: actions/cache@v2
      env:
        cache-name: cache-poetry-v2
      with:
        path: ~/.cache/pypoetry
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('./orchestration/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Install dependencies
      id: dependencies
      run: poetry install
      working-directory: ${{ github.workspace }}/orchestration
    - name: Enforce coding style guide
      run: poetry run autopep8 --recursive --diff --exit-code .
      working-directory: ${{ github.workspace }}/orchestration
      if: always() && steps.dependencies.outcome == 'success' # run all three checks, even if a prior check fails
    - name: Check static types
      run: poetry run mypy
      working-directory: ${{ github.workspace }}/orchestration
      if: always() && steps.dependencies.outcome == 'success' # run all three checks, even if a prior check fails
    - name: Run test suite
      run: poetry run pytest -v
      working-directory: ${{ github.workspace }}/orchestration
      if: always() && steps.dependencies.outcome == 'success' # run all three checks, even if a prior check fails
