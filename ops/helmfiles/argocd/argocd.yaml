---
global:
  image:
    tag: v1.8.4
repoServer:
  serviceAccount:
    create: true
    name: hca-argocd-repo-server
  rbac:
    - apiGroups:
        - argoproj.io
      resources:
        - applications
      verbs:
        - get
        - list
        - watch
  volumes:
    - name: custom-tools
      emptyDir: {}
  initContainers:
    - name: download-tools
      image: alpine:3.8
      command: [sh, -c]
      args:
        - wget -qO /custom-tools/argo-cd-helmfile.sh https://raw.githubusercontent.com/travisghansen/argo-cd-helmfile/master/src/argo-cd-helmfile.sh &&
          chmod +x /custom-tools/argo-cd-helmfile.sh &&
          wget -qO /custom-tools/helmfile https://github.com/roboll/helmfile/releases/download/v0.98.2/helmfile_linux_amd64 &&
          chmod +x /custom-tools/helmfile
      volumeMounts:
        - mountPath: /custom-tools
          name: custom-tools
  volumeMounts:
    - mountPath: /usr/local/bin/argo-cd-helmfile.sh
      name: custom-tools
      subPath: argo-cd-helmfile.sh
    - mountPath: /usr/local/bin/helmfile
      name: custom-tools
      subPath: helmfile
redis:
  enabled: false
redis-ha:
  enabled: true
  serviceAccount:
    create: true
    name: redis-sa
configs:
  secret:
    createSecret: false
server:
  extraArgs:
    - --insecure
  config:
    configManagementPlugins: |
      - name: helmfile
        init:
          command: ["argo-cd-helmfile.sh"]
          args: ["init"]
        generate:
          command: ["argo-cd-helmfile.sh"]
          args: ["generate"]
    url: https://hca-argocd.monster-dev.broadinstitute.org
    # helm repositories
    repositories: |
      - type: helm
        url: https://broadinstitute.github.io/datarepo-helm
        name: datarepo-helm
      - type: helm
        url: https://kubernetes-charts.storage.googleapis.com
        name: stable
      - type: helm
        url: https://broadinstitute.github.io/monster-helm
        name: monster
    dex.config: |
      staticClients:
        - id: "argo-cd-cli"
          name: "Argo CD CLI"
          redirectURIs: ["http://localhost:8085/auth/callback"]
          public: true
      connectors:
        - type: github
          id: github
          name: GitHub
          config:
            clientID:  2fd73ff5b8548deae56a
            clientSecret: $dex.github.clientSecret
            orgs:
            - name: DataBiosphere
            - name: broadinstitute
  service:
    annotations:
      beta.cloud.google.com/backend-config: '{"ports": {"80":"ip-whitelist-backend-config"}}'
    type: NodePort  # Required to enable forwarding from Ingress/LB to service
  ingress:
    enabled: true
    paths:
      - /*
    hosts:
      - hca-argocd.monster-dev.broadinstitute.org
    annotations:
      kubernetes.io/ingress.global-static-ip-name: hca-argocd-ip
      kubernetes.io/ingress.allow-http: "false"  # Disable http traffic
      networking.gke.io/managed-certificates: "argocd-certificate"
  rbacConfig:
    policy.default: role:readonly
    policy.csv: |
      g, broadinstitute:DSP DevOps, role:admin
      g, broadinstitute:monster, role:admin
      g, broadinstitute:monster_dev, role:admin