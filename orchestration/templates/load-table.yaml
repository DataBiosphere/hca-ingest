apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: load-table
spec:
  entrypoint: main
  serviceAccountName: {{ .Values.serviceAccount.k8sName }}
  templates:
    - name: main
      inputs:
        parameters:
          - name: table
          {{- $table := "{{inputs.parameters.table}}" }}
          - name: staging-prefix
          {{- $stagingPrefix := "{{inputs.parameters.staging-prefix}}" }}
          - name: metadata-type
          {{- $metadataType := "{{inputs.parameters.metadata-type}}" }}
          - name: bq-dataset
          {{- $bqDataset := "{{inputs.parameters.bq-dataset}}" }}
          - name: data-repo-name
          {{- $dataRepoName := "{{inputs.parameters.data-repo-name}}" }}
          - name: data-repo-project
          {{- $dataRepoProject := "{{inputs.parameters.data-repo-project}}" }}
          - name: dataset-id
          {{- $datasetId := "{{inputs.parameters.dataset-id}}" }}
      dag:
        tasks:
          {{- $newRowsPrefix := printf "%s/new-rows/%s" $stagingPrefix $table }}
          {{- $oldIdsPrefix := printf "%s/old-ids/%s" $stagingPrefix $table }}
            - name: diff-table
              templateRef:
                name: diff-hca-table
                template: main
              arguments:
                parameters:
                  - name: table-name
                    value: {{ $table | quote }}
                  - name: gcs-bucket
                    value: {{ .Values.gcs.stagingBucketName }}
                  - name: input-prefix
                    value: {{ printf "%s/%s/%s" $stagingPrefix $metadataType $table | quote }}
                  - name: old-ids-output-prefix
                    value: {{ $oldIdsPrefix | quote }}
                  - name: new-rows-output-prefix
                    value: {{ $newRowsPrefix | quote }}
                  - name: staging-bq-project
                    value: {{ .Values.bigquery.stagingData.project }}
                  - name: staging-bq-dataset
                    value: {{ $bqDataset | quote }}
                  - name: jade-bq-project
                    value: {{ $dataRepoProject | quote }}
                  - name: jade-bq-dataset
                    value: {{ $dataRepoName | quote }}
                  - name: diff-full-history
                    value: 'false'
                  {{- $shouldAppend := "{{tasks.diff-table.outputs.parameters.rows-to-append-count}} > 0" }}

            - name: ingest-table
              dependencies: [diff-table]
              when: {{ $shouldAppend | quote }}
              templateRef:
                name: {{ .Values.argoTemplates.ingestTable.name }}
                template: main
              arguments:
                parameters:
                  - name: table-name
                    value: {{ $table | quote}}
                  - name: gcs-prefix
                    value: {{ $newRowsPrefix | quote }}
                  - name: gcs-bucket
                    value: {{ .Values.gcs.stagingBucketName }}
                  {{- with .Values.repo }}
                  - name: url
                    value: {{ .url }}
                  - name: dataset-id
                    value: {{ $datasetId | quote }}
                  - name: timeout
                    value: {{ .pollTimeout }}
                  - name: sa-secret
                    value: {{ .accessKey.secretName }}
                  - name: sa-secret-key
                    value: {{ .accessKey.secretKey }}
                  {{- end }}

            - name: get-outdated-ids
              dependencies: [ingest-table]
              template: get-outdated-ids
              arguments:
                parameters:
                  - name: table
                    value: {{ $table | quote }}
                  - name: staging-bq-dataset
                    value: {{ $bqDataset | quote }}
                  - name: data-repo-name
                    value: {{ $dataRepoName | quote }}
                  {{- $outdatedIdsTable := "{{tasks.get-outdated-ids.outputs.result}}" }}

            {{- $outdatedIdsPrefix := printf "%s/outdated-ids/%s" $stagingPrefix $table }}
            - name: export-outdated
              dependencies: [get-outdated-ids]
              templateRef:
                name: {{ .Values.argoTemplates.exportBQTable.name }}
                template: main
              arguments:
                parameters:
                  - name: bq-project
                    value: {{ .Values.bigquery.stagingData.project }}
                  - name: bq-dataset
                    value: {{ $bqDataset | quote }}
                  - name: bq-table
                    value: {{ $outdatedIdsTable | quote }}
                  - name: output-format
                    value: CSV
                  - name: gcs-bucket
                    value: {{ .Values.gcs.stagingBucketName }}
                  - name: gcs-prefix
                    value: {{ $outdatedIdsPrefix | quote }}
              {{- $outdatedCount := "{{tasks.export-outdated.outputs.parameters.row-count}}" }}

            - name: soft-delete-outdated
              dependencies: [export-outdated]
              when: {{ printf "%s > 0" $outdatedCount | quote }}
              templateRef:
                name: {{ .Values.argoTemplates.softDeleteTable.name }}
                template: main
              arguments:
                parameters:
                  - name: table-name
                    value: {{ $table | quote}}
                  - name: gcs-prefix
                    value: {{ $outdatedIdsPrefix | quote }}
                  - name: gcs-bucket
                    value: {{ .Values.gcs.stagingBucketName }}
                  {{- with .Values.repo }}
                  - name: url
                    value: {{ .url }}
                  - name: dataset-id
                    value: {{ $datasetId | quote }}
                  - name: timeout
                    value: {{ .pollTimeout }}
                  - name: sa-secret
                    value: {{ .accessKey.secretName }}
                  - name: sa-secret-key
                    value: {{ .accessKey.secretKey }}
                  {{- end }}

    ##
    ## Extract the TDR row IDs for rows containing an "outdated" version of a document,
    ## where "outdated" is determined by the version of other data stored in the TDR dataset.
    ##
    - name: get-outdated-ids
      inputs:
        parameters:
          - name: table
          {{- $table := "{{inputs.parameters.table}}" }}
          - name: staging-bq-dataset
          {{- $bqDataset := "{{inputs.parameters.staging-bq-dataset}}" }}
          - name: data-repo-name
          - name: data-repo-project
      script:
        image: google/cloud-sdk:slim
        env:
          - name: TABLE
            value: {{ $table | quote }}
          - name: STAGING_PROJECT
            value: {{ .Values.bigquery.stagingData.project }}
          - name: STAGING_DATASET
            value: {{ $bqDataset | quote }}
          - name: JADE_PROJECT
            value: {{ $dataRepoProject | quote }}
          - name: JADE_DATASET
            value: {{ $dataRepoName | quote }}
        command: [bash]
        source: |
        {{- include "argo.render-lines" (.Files.Lines "scripts/get-outdated-row-ids.sh") | indent 10 }}

    ##
    ## Inject common template used to poll TDR jobs.
    ##
    {{- include "argo.poll-ingest-job" . | indent 4 }}
